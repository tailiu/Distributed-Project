{
  "name": "cave-automata-2d",
  "version": "0.3.1",
  "description": "Generate 2D cave layouts in JavaScript",
  "main": "index.js",
  "scripts": {
    "test": "node eyeball-test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/cave-automata-2d.git"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com/"
  },
  "license": "MIT",
  "dependencies": {
    "moore": "0.0.x",
    "ndarray-fill": "0.1.0",
    "ndarray-stencil": "0.1.0",
    "zeros": "0.0.0"
  },
  "devDependencies": {},
  "keywords": [
    "cave",
    "cellular",
    "automata",
    "procedural",
    "content",
    "generation"
  ],
  "readme": "# cave-automata-2d [![stable](https://rawgithub.com/hughsk/stability-badges/master/dist/stable.svg)](http://github.com/hughsk/stability-badges) #\n\nGenerate 2D cave layouts in JavaScript: an implementation of\nthe first half of\n[this paper](http://julian.togelius.com/Johnson2010Cellular.pdf) using\n[ndarrays](http://github.com/mikolalysenko/ndarray).\n\n## Installation ##\n\n``` bash\nnpm install cave-automata-2d\n```\n\n## Usage ##\n\n### `iterate = cave(ndarray[, opts])` ###\n\nTakes an ndarray and prepares it for cave generation. Options include:\n\n* `density`: The probability of each filled cell being set to `1` (\"on\"),\n  as opposed to `0` (\"off\"). Defaults to 0.5.\n* `threshold`: The minimum surrounding cells required for a cell to survive an\n  iteration. Defaults to 5.\n* `hood`: The maximum distance of neighboring cells to check. Defaults to 1.\n* `fill`: By default, the ndarray is populated with random values. If you need\n  to disable this, pass `fill: false`.\n* `iterations`: The amount of iterations to apply immediately. Defaults to 0.\n* `border`: If truthy, will include a solid border around the results.\n  Defaults to 1.\n* `buffer`: An ndarray buffer to use between iterations, which must be the same\n  shape as the original array. If none is supplied, one will be created.\n\nNote that this function will modify the array directly.\n\n### `iterate([iterations])` ###\n\nThe above function will return an \"iterate\" function, which will step the\nsimulation forward a specific number of ticks. This will generate the cave\nlayout - the best amount of iterations to run varies depending on the\nparameters above.\n\nBecause of the way the module works under the hood, there's less overhead by\niterating an even number of times.\n\n## Example ##\n\n``` javascript\nvar cave = require('cave-automata-2d')\n  , ndarray = require('ndarray')\n  , width = 50\n  , height = 50\n\nvar grid = ndarray.zeros([ width, height ])\n\n// Fill the grid with random points,\n// returning an \"iterate\" method.\nvar iterate = cave(grid, {\n    density: 0.5\n  , threshold: 5\n  , hood: 1\n  , fill: true\n})\n\n// Iterate the grid five times to generate\n// a smooth-ish layout.\niterate(5)\n```\n\nYou can see the generator at work by running `eyeball-test.js` in Node, which will spit out something similar to this:\n\n```\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@..@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@...........@@@@@..@@@@@...@@@@@@@@@@@@@@@@@@@@@@@...@@@@@@@@@@@@@@.....@@@@@@@@@@@@@@@@@.....@@@@@@\n@@@@@@@@@@@@@@@@@@@@@............@@@....@@@.....@@@@.....@@@..@@@@@@@.....@@@@@..@@@@@.......@@@@@@@@@.............@@@@@\n@@@@@@@@@@@@@@..@@@@@............@@@....@@@......@@............@@@@@@.....@@@@....@@@@........@@@..@@..............@@@@@\n@@@@@@@@@@@@@....@@@..............@.............................@@@@@......@@......@@..............................@@@@@\n@@@@@@@@@@@@.....................................................@@@..............................................@@@@@@\n@@@@@@@...........................................................................................................@@@@@@\n@@@@@@.................@@@.........................................................................................@@@@@\n@@@@@.................@@@@@.................................@@......................................................@@@@\n@@@@..............@@@@@@@@@@...............................@@@@..............................................@@@....@@@@\n@@@..............@@@@@@@@@@@@@............................@@@@@..............................................@@@@..@@@@@\n@@@............@@@@@@@@...@@@@@.....@@....................@@@@..................@@..........................@@@@@@@@@@@@\n@@@...........@@@@@@@@......@@@@...@@@@....................@@@.................@@@@........................@@@@@@@@@@@@@\n@@@........@@@@@@@@@@........@@@@@@@@@@@...................@@@@..@@@...........@@@@........................@@@@@@@@@@@@@\n@@@.......@@@@@@@@............@@@@@@@@@@@@.................@@@@@@@@@@...........@@..........................@@@.....@@@@\n@@@........@@@@..........@@...@@@@@@@@@@@@@.................@@@@@@@@@................................................@@@\n@@@@........@@..........@@@@..@@@@@@@@@@@@@...................@@..@@@................................................@@@\n@@@@@@..................@@@@..@@@@@@@@@@@@......@@.................@@@...............................................@@@\n@@@@@@@................@@@@@@.@@@@@@@@@........@@@@.................@@@................@@............................@@@\n@@@@@@@............@@@@@@@@@@..@@@@@@@........@@@@@@@@@@............@@@@..............@@@@...................@@......@@@\n@@@@@@@............@@@@@@@@@@...@@@@@@........@@@@@@@@@@@..........@@@@@@.............@@@@..................@@@@....@@@@\n@@@@@@..............@@@@@@@@@@.....@@@........@@@@@@@@@@@@.........@@@@@@@@..........@@@@@@.................@@@@....@@@@\n@@@@@@....................@@@@......@@@........@@@@@@@@@@@@.........@@@@@@@@@.......@@@@@@@@.................@@@....@@@@\n@@@@@@@....................@@@......@@@@........@@@@@@@@@@@@.............@@@@@......@@@@@@@@@................@@@....@@@@\n@@@@@@@@@@..................@@......@@@@@.......@@@@@@@@@@@@..............@@@@@.....@@@@@@@@@................@@@....@@@@\n@@@@@@@@@@@.................@@......@@@@@@......@@@@@@@@@@@@@..............@@@@.....@@@@@@@@@................@@@@..@@@@@\n@@@@@@@@@@@.................@@@....@@@@@@@.......@@@@@@@@@@@@..............@@@@@....@@@@@@@@...........@@....@@@@@@@@@@@\n@@@@@@@@@@@@................@@@@..@@@@@@@..............@@@@@@...............@@@@@...@@@@@@@@......@@@@@@@.....@@@@@@@@@@\n@@@@@@@@@@@@...............@@@@@@@@@@@@@................@@@@@@..@@@...@@.....@@@.....@@@@@@@.....@@@@@@@@.....@@@@@@@@@@\n@@@@@@@@@@@@..........@@@@@@@@@@@@@@@@@@.................@@@@@@@@@@@@@@@@..............@@@@@@....@@@@@@@@....@@@@@@@@@@@\n@@@@..@@@@@@.........@@@@@@@..@@@@@@@@@@....................@@@@@@@@@@@@@.................@@@@....@@@@@@...@@@@@@@@@@@@@\n@@@....@@@@.........@@@@@@@....@@@@@@@@@.....................@@@@@@@@@@@@@.................@@@@...@@@@@...@@@@@@@@@@@@@@\n@@@....@@@........@@@@@@@@.....@@@@@@@@@......................@@@@@.....@@@.................@@@@@@@@@@....@@@@@@@@@@@@@@\n@@@@..@@@@.......@@@@@@........@@@@@@@@@........@@............@@@@.......@@@................@@@@@@@@@......@@@@@@@..@@@@\n@@@@@@@@@@.......@@@@@@.........@@@@@@@........@@@@..........@@@@@........@@@..............@@@@@@@@@@................@@@\n@@@@@@@@@@@......@@@@@@.........@@@@@@........@@@@@......@@@@@@@@@........@@@@....@@@@@@..@@@@@@@@@@@@...............@@@\n@@@@@@@@@@@@....@@@@@@@@@@.....@@@@@@@....@@@@@@@@@.....@@@@@@@@@@.......@@@@@@..@@@@@@@@@@@@@@@@@@@@@@@@@..........@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@..@@@@@@@@@@@...@@@@@@@@@@@@..@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n```\n\nNeat, huh?\n",
  "readmeFilename": "README.md",
  "_id": "cave-automata-2d@0.3.1",
  "dist": {
    "shasum": "94bf0c8b0eeedcd67edcfcddc4ac96041def317b",
    "tarball": "http://registry.npmjs.org/cave-automata-2d/-/cave-automata-2d-0.3.1.tgz"
  },
  "_from": "cave-automata-2d@*",
  "_npmVersion": "1.2.18",
  "_npmUser": {
    "name": "hughsk",
    "email": "hughskennedy@gmail.com"
  },
  "maintainers": [
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "94bf0c8b0eeedcd67edcfcddc4ac96041def317b",
  "_resolved": "https://registry.npmjs.org/cave-automata-2d/-/cave-automata-2d-0.3.1.tgz"
}
