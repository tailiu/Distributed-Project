{
  "name": "mod-loop",
  "version": "0.0.0",
  "description": "A workaround for using negative numbers with JS's modulo operator",
  "main": "index.js",
  "scripts": {
    "test": "node test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/mod-loop.git"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com/"
  },
  "license": "MIT",
  "devDependencies": {
    "tape": "~1.0.4"
  },
  "readmeFilename": "README.md",
  "keywords": [
    "modulus",
    "negative",
    "numbers"
  ],
  "readme": "# mod-loop #\n\nJavaScript's modulo operator (`%`) doesn't handle negative numbers nicely -\nhere's something general to work around the issue.\n\n## Installation ##\n\n``` bash\nnpm install mod-loop\n```\n\n## Usage ##\n\n### `require('mod-loop')(x, y)` ###\n\nReturns `x % y`, for both positive and negative and negative numbers.\n\n``` javascript\nvar mod = require('mod-loop')\n\nmod(+100, 10) // 0\nmod(-100, 10) // 0\nmod(-105, 10) // 5\nmod(-102, 10) // 8\n```\n",
  "_id": "mod-loop@0.0.0",
  "dist": {
    "shasum": "01b394cb5ddf7ee9351cb1a51ffb2cc135b2fe4c",
    "tarball": "http://registry.npmjs.org/mod-loop/-/mod-loop-0.0.0.tgz"
  },
  "_npmVersion": "1.1.71",
  "_npmUser": {
    "name": "hughsk",
    "email": "hughskennedy@gmail.com"
  },
  "maintainers": [
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "01b394cb5ddf7ee9351cb1a51ffb2cc135b2fe4c",
  "_resolved": "https://registry.npmjs.org/mod-loop/-/mod-loop-0.0.0.tgz",
  "_from": "mod-loop@0.0.0"
}
