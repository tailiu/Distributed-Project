var stun = require('../index')
var winston = require('winston')

// args
var argv = require('yargs')
  .usage('Usage: $0 [params]')
  // address stun server address
  .demand('sa')
  .nargs('sa', 1)
  .default('sa', 'stun.l.google.com')
  .describe('sa', 'STUN address')
  // port `stun server
  .demand('sp')
  .nargs('sp', 1)
  .default('sp', '19302')
  .describe('sp', 'STUN port')
  //
  .default('l', 'debug')
  .choices('l', ['info', 'debug', 'warn', 'error', 'verbose', 'silly'])
  .alias('l', 'log')
  .nargs('l', 1)
  .describe('l', 'Log level')
  // help
  .help('h')
  .alias('h', 'help')
  .argv

winston.level = argv.log

var stunSocket = stun(argv.addr, argv.port)

stunSocket.on('message', function (bytes, rinfo) {
  var message = bytes.toString()
  winston.debug('[puncher] receiving message: ' + message)
})

// open socket ...
var args = {port: 5678}
stunSocket.listenP(args)
  .then(function (localAddress) {
    winston.debug('[puncher] local address = ' + localAddress.address + ':' + localAddress.port)
    // and determine public address
    return stunSocket.bindP()
  })
  .then(function (mappedAddress) {
    winston.debug('[puncher] public address = ' + mappedAddress.address + ':' + mappedAddress.port)
  })
  .catch(function (error) {
    winston.error('[puncher] error = ' + error)
  })
