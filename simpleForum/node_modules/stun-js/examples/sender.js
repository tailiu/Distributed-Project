var dgram = require('dgram')
var winston = require('winston')

// args
var argv = require('yargs')
  .usage('Usage: $0 [params]')
  // puncher public address
  .demand('pa')
  .nargs('pa', 1)
  .describe('pa', 'puncher public address')
  // puncher public port
  .demand('pp')
  .nargs('pp', 1)
  .default('p', '5678')
  .describe('pp', 'puncher public port')
  // loglevel
  .default('l', 'debug')
  .choices('l', ['info', 'debug', 'warn', 'error', 'verbose', 'silly'])
  .alias('l', 'log')
  .nargs('l', 1)
  .describe('l', 'Log level')
  // help
  .help('h')
  .alias('h', 'help')
  .argv

winston.level = argv.log

var testMessages = 10

// socket config
var socket = dgram.createSocket('udp4')
socket.on('error', function (error) {
  winston.error('socket error:\n' + error.stack)
  socket.close()
})
socket.on('listening', function () {
  var address = socket.address()
  winston.info('listening at ' + address.address + ':' + address.port)
  sendTestData()
})

function sendTestData () {
  for (var i = 0; i < testMessages; i++) {
    var data = 'test message ' + i
    winston.info('sending message ' + data + ' to ' + argv.pa + ':' + argv.pp)
    var message = new Buffer(data)
    socket.send(message, 0, message.length, argv.pp, argv.pa)
  }
}

socket.bind(1234)
