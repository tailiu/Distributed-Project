var stun = require('../index')
var winston = require('winston')

var argv = require('yargs')
  .usage('Usage: $0 [params]')
  .demand('a')
  .default('a', 'stun.l.google.com')
  .alias('a', 'addr')
  .nargs('a', 1)
  .describe('a', 'STUN server address')
  .demand('p')
  .default('p', '19302')
  .alias('p', 'port')
  .nargs('p', 1)
  .describe('p', 'STUN server port')
  .default('l', 'debug')
  .choices('l', ['info', 'debug', 'warn', 'error', 'verbose', 'silly'])
  .alias('l', 'log')
  .nargs('l', 1)
  .describe('l', 'Log level')
  .help('h')
  .alias('h', 'help')
  .argv

winston.level = argv.log

var socketAlice = stun(argv.addr, argv.port)
var socketBob = stun(argv.addr, argv.port)
var srflxAddressAlice, srflxAddressBob

var testQuestion = 'What is the meaning of life?'
var testAnswer = 'A movie.'
var testRuns = 10
var messagesSent = 0

var sendRequest = function (onSuccess) {
  var bytes = new Buffer(testQuestion)
  socketAlice.send(
    bytes,
    srflxAddressBob.address,
    srflxAddressBob.port,
    function () { // on success
      winston.debug('question sent from alice to bob @ ' + srflxAddressBob.address + ':' + srflxAddressBob.port)
      if (onSuccess) {
        onSuccess()
      }
    },
    function (error) { // on error
      winston.error(error)
    }
  )
}

var sendReply = function () {
  var bytes = new Buffer(testAnswer)
  socketBob.send(
    bytes,
    srflxAddressAlice.address,
    srflxAddressAlice.port,
    function () { // on success
      winston.debug('response sent from bob to alice @ ' + srflxAddressAlice.address + ':' + srflxAddressAlice.port)
    },
    function (error) { // on failure
      winston.error(error)
    }
  )
}

socketAlice.on('message', function (bytes, rinfo) {
  var message = bytes.toString()
  winston.debug('alice received message: ' + message)
  if (messagesSent === testRuns) {
    socketAlice.closeP()
      .then(function () {
        return socketBob.closeP()
      })
      .then(function () {
        winston.debug("that's all folks")
        process.exit(0)
      })
  } else {
    sendRequest(function () {
      messagesSent++
    })
  }
})

socketBob.on('message', function (bytes, rinfo) {
  var message = bytes.toString()
  winston.debug('bob received message: ' + message)
  sendReply()
})

// open alice's socket ...
socketAlice.listenP()
  .then(function (localAddress) {
    winston.debug("[stun-js] alice's local address = " + localAddress.address + ':' + localAddress.port)
    // and determine her public address
    return socketAlice.bindP()
  })
  .then(function (mappedAddress) {
    srflxAddressAlice = mappedAddress
    winston.debug("[stun-js] alice's srflx address = " + srflxAddressAlice.address + ':' + srflxAddressAlice.port)
    // open bob's socket ...
    return socketBob.listenP()
  })
  .then(function (localAddress) {
    winston.debug("[stun-js] bob's local address = " + localAddress.address + ':' + localAddress.port)
    // and determine his public address
    return socketBob.bindP()
  })
  .then(function (mappedAddress) {
    srflxAddressBob = mappedAddress
    winston.debug("[stun-js] bob's srflx address = " + srflxAddressBob.address + ':' + srflxAddressBob.port)
    // add alice's private address to the NAT's translation table
    return socketAlice.sendBindIndicationP()
  })
  // .then(function () {
  //   return socketAlice.sendP(new Buffer(0), 'www.google.be', 80)
  // })
  .then(function () {
    winston.debug('[stun-js] alice sent bind indication')
    // add bob's private address to the NAT's translation table
    return socketBob.sendBindIndicationP()
  })
  // .then(function () {
  //   return socketBob.sendP(new Buffer(0), 'www.google.be', 80)
  // })
  .then(function () {
    winston.debug('[stun-js] bob sent bind indication')
    // send request
    sendRequest(function () {
      messagesSent++
    })
  })
